{%- comment -%}
Those are the option names for which we automatically detect swatch. For the color, we use them to display a swatch, while
for size, we use it to display a size chart (if applicable)
{%- endcomment -%}
<script src="{{ 'product-page-filters.js' | asset_url }}" defer="defer"></script>

{%- assign color_label = 'metal color,color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ',' -%}
{%- assign size_label = 'size,taille,größe,tamanho,tamaño,koko,サイズ' | split: ',' -%}
{%- assign carat_label = 'carat,karat,center-stone-size' | split: ',' -%}

{%- assign size_chart_page = '' -%}
{%- assign product_popovers = '' -%}
{%- assign show_option_label = false -%}

{%- assign selected_variant = product.selected_or_first_available_variant -%}

<div class="ProductForm__Variants">
    <div id="current-variant-obj" data-variant='{{ selected_variant | json }}'></div>
    {% comment %} Shape variant to show in order {% endcomment %}
    {% if product.metafields.custom_fields["shapes"] != blank %}
        <input id="shape-input" type="text" class="BlockHidden" name="properties[Shape]" value=""/>
    {% endif %}

    {% assign skuSplit = product.variants[0].sku | split: "-" %}

    <input id="carat-input" type="text" class="BlockHidden" name="properties[Diamond Carat]"
           value="{{ skuSplit[3] }}"/>
    <input id="color-input" type="text" class="BlockHidden" name="properties[Diamond Color]"
           value="{{ skuSplit[5] }}"/>
    <input id="clarity-input" type="text" class="BlockHidden" name="properties[Diamond Clarity]"
           value="{{ skuSplit[6] }}"/>

    {% comment %} Custom size variants {% endcomment %}
    {% if product.tags contains 'finger-size' %}
        <div class="ProductForm__Option ProductForm__Option--labelled">
            <h2 class="ProductForm__Label">{{ 'product.labels.finger_size' | t }}:
            {%- assign size_page = pages['size-chart'] -%}
                {%- if size_page != empty -%}
                    <button type="button" class="ProductForm__LabelLink Link Text--subdued"
                            data-action="open-modal" aria-controls="modal-{{ size_page.handle }}">
                        {{- 'product.form.size_chart' | t -}}
                    </button>
                {%- endif -%}
            </h2>
            <button id="size" name="properties[Size]" type="button" class="ProductForm__Item" aria-expanded="false"
                    aria-controls="popover-product-template-{{ product.id }}-size-list">
                <span class="ProductForm__OptionName">
                    <span class="ProductForm__SelectedValue">4</span>
                </span>{%- render 'icon' with 'select-arrow' -%}
            </button>
        </div>
        <div id="popover-product-template-{{ product.id }}-size-list"
             class="OptionSelector Popover Popover--withMinWidth"
             aria-hidden="true">
            <header class="Popover__Header">
                <button type="button" class="Popover__Close Icon-Wrapper--clickable"
                        data-action="close-popover">{% render 'icon' with 'close' %}</button>
                <span class="Popover__Title Heading u-h4">{{ 'product.labels.finger_size' | t }}</span>
            </header>
            <div class="Popover__Content">
                <div class="Popover__ValueList" data-scrollable>
                    {%- for i in (1..24) -%}
                        {%- capture finger_size -%}{%- cycle '4', '4 ¼', '4 ½', '4 ¾', '5', '5 ¼', '5 ½', '5 ¾', '6', '6 ¼', '6 ½', '6 ¾', '7', '7 ¼', '7 ½', '7 ¾', '8', '8 ¼', '8 ½', '8 ¾', '9', '9 ¼', '9 ½', '9 ¾' -%}{%- endcapture -%}

                        <button type="button"
                                class="Popover__Value Heading Link Link--primary u-h6 change-select"
                                data-value="{{ finger_size }}"
                                data-option-position="0"
                                data-action="select-value">
                            {{ finger_size }}
                        </button>
                    {%- endfor -%}
                </div>
            </div>
        </div>
    {% endif %}

    {% assign size_switcher_list = product.metafields.custom.size_switcher %}

    {% if size_switcher_list.value.size > 0 %}
        {%- assign color_swatch_config = settings.color_swatch_config | newline_to_br | split: '<br />' -%}
        {% assign current_product_size = '' %}
        {%- for value in size_switcher_list.value -%}
            {% if product.handle == value.product_handle %}
                {% assign current_product_size = current_product_size | append: value.name | capitalize %}
            {% endif %}
        {% endfor %}

        <div class="ProductForm__Option ProductForm__Option--labelled">
            <span class="ProductForm__Label">
                <h2 style="display:inline;">Size Option:</h2>
                <span class="ProductForm__SelectedValue">
                    {{ current_product_size }}
                </span>
            </span>

            <ul class="ColorSwatchList HorizontalList HorizontalList--spacingTight">
                {%- for value in size_switcher_list.value -%}

                    {%- assign downcase_value = value.name | downcase -%}

                    <li class="HorizontalList__Item">
                        <input id="option-{{ section.id }}-{{ value.product_handle }}-{{ forloop.index0 }}"
                               class="ColorSwatch__Radio" type="radio"
                               name="option-size-switcher" value="{{ value.name | capitalize }}"
                               {% if product.handle == value.product_handle %}checked="checked"{% endif %}
                        >
                        <label for="option-{{ section.id }}-{{ value.product_handle }}-{{ forloop.index0 }}"
                               class="ColorSwatch ColorSwatch--large"
                               data-tooltip="{{ value.name | capitalize }}"
                               style="{% render 'color-swatch-style', color_swatch_config: color_swatch_config, value: value.name %}"
                                {% if product.handle != value.product_handle %}
                                    onclick="window.location.href = '/products/{{ value.product_handle }}'"
                                {% endif %}
                        >
                            <span class="u-visually-hidden">{{ value.name  }}</span>
                        </label>
                    </li>
                {%- endfor -%}
            </ul>
        </div>
    {% endif %}

    {% assign carat_options = product.metafields.custom.carat_options %}

    {% if carat_options.value.size > 0 %}
        {%- assign color_swatch_config = settings.color_swatch_config | newline_to_br | split: '<br />' -%}
        {% assign current_product_size = '' %}
        {%- for value in carat_options.value -%}
            {% if product.handle == value.product_handle %}
                {% assign current_product_size = current_product_size | append: value.carat | capitalize %}
            {% endif %}
        {% endfor %}

        <div class="ProductForm__Option ProductForm__Option--labelled">
            <span class="ProductForm__Label">
                <h2 style="display:inline;">Carat Option:</h2>
                <span class="ProductForm__SelectedValue">
                    {{ current_product_size }}
                </span>
            </span>

            <ul class="ColorSwatchList HorizontalList HorizontalList--spacingTight">
                {%- for value in carat_options.value -%}

                    {%- assign downcase_value = value.carat | downcase -%}

                    <li class="HorizontalList__Item">
                        <input id="option-{{ section.id }}-{{ value.product_handle }}-{{ forloop.index0 }}"
                               class="ColorSwatch__Radio" type="radio"
                               name="option-size-switcher" value="{{ value.carat | capitalize }}"
                               {% if product.handle == value.product_handle %}checked="checked"{% endif %}
                        >
                        <label for="option-{{ section.id }}-{{ value.product_handle }}-{{ forloop.index0 }}"
                               class="ColorSwatch ColorSwatch--large"
                               data-tooltip="{{ value.carat | capitalize }}"
                               style="display: flex; justify-content: center; align-items: center; background-color: #dfe0e0;"
                                {% if product.handle != value.product_handle %}
                                    onclick="window.location.href = '/products/{{ value.product_handle }}'"
                                {% endif %}
                        >
                            <span class="">{{ value.carat | replace: 'mm', '' }}</span>
                        </label>
                    </li>
                {%- endfor -%}
            </ul>
        </div>
    {% endif %}

    {%- unless product.has_only_default_variant -%}
        {%- for option in product.options_with_values -%}
            {%- assign downcase_option = option.name | downcase -%}

            {%- if block.settings.selector_mode == 'block' or color_label contains downcase_option and block.settings.show_color_swatch -%}
                {%- assign show_option_label = true -%}
            {%- endif -%}
        {%- endfor -%}

        {%- for option in product.options_with_values -%}
            {%- assign downcase_option = option.name | downcase -%}
            {%- capture popover_id -%}popover-{{ product.id }}-{{ section.id }}-{{ option.name | handle }}{%- endcapture -%}

            <div class="ProductForm__Option {% if show_option_label %}ProductForm__Option--labelled{% endif %}">
                {%- if show_option_label -%}
                {%- assign size_chart_page = pages['size-chart'] -%}
                {%- assign option_name = option.name -%}
                {%- if option_name == 'center-stone-size' or option_name == 'size' -%}
                    <span id="center-stone-size" class="ProductForm__Label">
                      {{ 'product.labels.center-stone-size' | t }}:
                {%- else -%}
                    <span class="ProductForm__Label">
                  {%- if option_name == 'Metal Color' -%}
                    <h2 style="display:inline;">{{ option.name }}:</h2>
                    {%- else -%}
                    {{ option.name }}:
                    {%- endif -%}
                {%- endif -%}
                        {% if color_label contains downcase_option %}
                            <span class="ProductForm__SelectedValue">{{ option.selected_value }}</span>
                        {% endif %}

                        {% if carat_label contains downcase_option %}
                            <span class="ProductForm__SelectedValue">{{ option.selected_value }}</span>
                        {% endif %}

                        {%- if size_label contains downcase_option and size_chart_page != empty -%}
                            <button type="button"
                                    class="ProductForm__LabelLink Link Text--subdued"
                                    data-action="open-modal"
                                    aria-controls="modal-{{ size_chart_page.handle }}"
                            >
                                {{- 'product.form.size_chart' | t -}}
                            </button>
                        {%- endif -%}
                        </span>
                    {%- endif -%}

                {%- if color_label contains downcase_option and block.settings.show_color_swatch -%}
                    <ul class="ColorSwatchList HorizontalList HorizontalList--spacingTight">
                        {%- assign color_swatch_config = settings.color_swatch_config | newline_to_br | split: '<br />' -%}

                        {%- for value in option.values -%}
                            {%- assign downcase_value = value | downcase -%}

                            <li class="HorizontalList__Item">
                                <input id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}"
                                       class="ColorSwatch__Radio" type="radio"
                                       name="option-{{ forloop.parentloop.index0 }}" value="{{ value | escape }}"
                                       {% if value == option.selected_value %}checked="checked"{% endif %}
                                       data-option-position="{{ option.position }}">
                                <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}"
                                       class="ColorSwatch ColorSwatch--large {% if downcase_value == 'white' %}ColorSwatch--white{% endif %}"
                                       data-tooltip="{{ value | escape }}"
                                       style="{% render 'color-swatch-style', color_swatch_config: color_swatch_config, value: value %}">
                                    <span class="u-visually-hidden">{{ value }}</span>
                                </label>
                            </li>
                        {%- endfor -%}
                    </ul>
                    <div id="product-filters"></div>
                    {%- elsif carat_label contains downcase_option -%}
                        <ul class="CaratOptionList HorizontalList HorizontalList--spacingTight">
                                {%- for value in option.values -%}
                                    {%- assign downcase_value = value | downcase | remove: "." -%}

                                    <li class="HorizontalList__Item">
                                        {%- assign carat_name = downcase_value | handle | append: '.png' -%}
                                        {%- assign carat_image = images[carat_name] -%}

                                        <input id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}"
                                               class="CaratOption__Radio" type="radio"
                                               name="option-{{ forloop.parentloop.index0 }}" value="{{ value | escape }}"
                                               {% if value == option.selected_value %}checked="checked"{% endif %}
                                               data-option-position="{{ option.position }}">
                                        <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}"
                                               class="CaratOption CaratOption--large"
                                               data-tooltip="{{ value | escape }}"
                                               style="{% if carat_image != blank %}background-image: url({{ carat_image | img_url: '64x64' }}){% endif %}">
                                            <span class="u-visually-hidden">{{ value }}</span>
                                        </label>
                                    </li>
                                {%- endfor -%}
                            </ul>
                {%- elsif block.settings.selector_mode == 'block' -%}
                    <ul class="SizeSwatchList HorizontalList HorizontalList--spacingTight">
                        {%- for value in option.values -%}
                            <li class="HorizontalList__Item">
                                <input id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}"
                                       class="SizeSwatch__Radio" type="radio"
                                       name="option-{{ forloop.parentloop.index0 }}" value="{{ value | escape }}"
                                       {% if value == option.selected_value %}checked="checked"{% endif %}
                                       data-option-position="{{ option.position }}">
                                <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}"
                                       class="SizeSwatch">{{ value }}</label>
                            </li>
                        {%- endfor -%}
                    </ul>
                {%- else -%}
                    <div style="position: relative">
                        <button type="button" class="ProductForm__Item" aria-expanded="false"
                                aria-controls="{{ popover_id }}">
                            <span class="ProductForm__OptionName">{% unless show_option_label %}{{ option.name }}: {% endunless %}<span
                                        class="ProductForm__SelectedValue">{{ option.selected_value }}</span></span>
                            {%- render 'icon' with 'select-arrow' -%}
                        </button>

                        <div style="position: absolute; right: -26px; top: 0; width: 26px; opacity: 0.3; cursor: pointer"
                             data-action="open-modal"
                             aria-controls="modal-finder-size"
                        >
                            {%- render 'icon' with 'question-mark' -%}
                        </div>
                    </div>
                    {%- capture popover_html -%}
                        {%- if color_label contains downcase_option and block.settings.show_color_carousel -%}
                            {%- for value in option.values -%}
                                {%- if value == option.selected_value -%}
                                    {%- assign initial_image_index = forloop.index0 -%}
                                    {%- break -%}
                                {%- endif -%}
                            {%- endfor -%}

                            {%- capture flickity_options -%}
                                {
                                "prevNextButtons": true,
                                "pageDots": true,
                                "initialIndex": {{ initial_image_index }},
                                "arrowShape": {"x0": 20, "x1": 60, "y1": 40, "x2": 60, "y2": 35, "x3": 25}
                                }
                            {%- endcapture -%}

                            <div id="{{ popover_id }}" class="VariantSelector" aria-hidden="true">
                                {%- capture option_index -%}option{{ option.position }}{%- endcapture -%}

                                {%- assign option_indexes_excluded_color = '' -%}
                                {%- assign selected_variant_title_excluded_color = '' -%}

                                {%- for option_nested in product.options_with_values -%}
                                    {%- if option_nested.position != option.position -%}
                                        {%- assign option_indexes_excluded_color = option_indexes_excluded_color | append: option_nested.position | append: ',' -%}

                                        {%- for option_nested_value in option_nested.values -%}
                                            {%- if option_nested_value == option_nested.selected_value -%}
                                                {%- assign selected_variant_title_excluded_color = selected_variant_title_excluded_color | append: option_nested_value -%}
                                            {%- endif -%}
                                        {%- endfor -%}
                                    {%- endif -%}
                                {%- endfor -%}

                                {%- assign option_indexes_excluded_color = option_indexes_excluded_color | split: ',' | compact -%}

                                <div class="VariantSelector__Carousel Carousel"
                                     data-flickity-config='{{ flickity_options }}'>
                                    {%- for value in option.values -%}
                                        <div class="VariantSelector__Item Carousel__Cell {% if value == option.selected_value %}is-selected{% endif %}"
                                             data-background-color="{{ value | split: ' ' | last | handle }}"
                                             data-background-image="{{ value | handle | append: '.png' | asset_url }}"
                                             data-option-position="{{ option.position }}"
                                             data-option-value="{{ value | escape }}">
                                            {%- for variant in product.variants -%}
                                                {%- if variant[option_index] == value -%}
                                                    {%- assign variant_image = variant.image | default: product.featured_image -%}

                                                    {%- assign variant_title_excluded_color = '' -%}
                                                    {%- for option_index_excluded_color in option_indexes_excluded_color -%}
                                                        {%- capture sub_option_index -%}option{{ option_index_excluded_color }}{%- endcapture -%}
                                                        {%- assign variant_title_excluded_color = variant_title_excluded_color | append: variant[sub_option_index] -%}
                                                    {%- endfor -%}

                                                    <div data-variant-title="{{ variant_title_excluded_color | escape }}"
                                                         class="VariantSelector__ImageWrapper AspectRatio AspectRatio--withFallback"
                                                         aria-hidden="{% if selected_variant_title_excluded_color == variant_title_excluded_color %}false{% else %}true{% endif %}"
                                                         style="max-width: {{ variant_image.width }}px; padding-bottom: {{ 100.0 | divided_by: variant_image.aspect_ratio }}%; --aspect-ratio: {{ variant_image.aspect_ratio }}">
                                                        {%- capture supported_sizes -%}{%- render 'image-size', sizes: '200,400,600,800', image: variant_image -%}{%- endcapture -%}
                                                        {%- assign image_url = variant_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                                                        <img class="VariantSelector__Image Image--lazyLoad Image--fadeIn"
                                                             data-src="{{ image_url }}"
                                                             data-widths="[{{ supported_sizes }}]" data-sizes="auto"
                                                             alt="{{ variant_image.alt | escape }}">
                                                        <span class="Image__Loader"></span>
                                                    </div>
                                                {%- endif -%}
                                            {%- endfor -%}
                                        </div>
                                    {%- endfor -%}
                                </div>

                                <div class="VariantSelector__Info">
                                    <div class="VariantSelector__ChoiceList">
                                        {%- for value in option.values -%}
                                            {%- assign min_price_for_variant = product.price_max -%}

                                            {%- for variant in product.variants -%}
                                                {%- if variant[option_index] == value -%}
                                                    {%- assign min_price_for_variant = min_price_for_variant | at_most: variant.price -%}
                                                {%- endif -%}
                                            {%- endfor -%}

                                            <div class="VariantSelector__Choice {% if value == option.selected_value %}is-selected{% endif %}">
                                                <div class="VariantSelector__ChoiceColor">
                                                    {%- assign downcase_value = value | downcase -%}

                                                    {%- assign color_swatch_name = value | handle | append: '.png' -%}
                                                    {%- assign color_swatch_image = images[color_swatch_name] -%}

                                                    <span class="VariantSelector__ColorSwatch {% if downcase_value == 'white' %}VariantSelector__ColorSwatch--white{% endif %}"
                                                          style="background-color: {{ value | replace: ' ', '' | downcase }}; {% if color_swatch_image != blank %}background-image: url({{ color_swatch_image | img_url: '64x64' }}){% endif %}"></span>
                                                    <span class="VariantSelector__ChoiceValue">{{ value }}</span>
                                                </div>

                                                <div class="VariantSelector__ChoicePrice"
                                                     data-color-position="{{ option.position }}">
                                                    {%- if available_prices_for_option_value.size > 1 -%}
                                                        {%- capture formatted_min_price -%}
                                                            <span>{{ min_price_for_variant | money }}</span>{%- endcapture -%}
                                                        <span class="Heading Text--subdued">{{ 'product.form.from_price_html' | t: min_price: formatted_min_price }}</span>
                                                    {%- else -%}
                                                        <span class="Heading Text--subdued">{{ min_price_for_variant | money }}</span>
                                                    {%- endif -%}
                                                </div>
                                            </div>
                                        {%- endfor -%}
                                    </div>

                                    <button type="button"
                                            class="VariantSelector__Button Button Button--primary Button--full"
                                            data-action="select-variant">{{- 'product.form.select_model' | t -}}</button>
                                </div>
                            </div>
                        {%- else -%}
                            <div id="{{ popover_id }}" class="OptionSelector Popover Popover--withMinWidth"
                                 aria-hidden="true">
                                <header class="Popover__Header">
                                    <button type="button" class="Popover__Close Icon-Wrapper--clickable"
                                            data-action="close-popover">{% render 'icon' with 'close' %}</button>
                                    <span class="Popover__Title Heading u-h4">{{ option.name | escape }}</span>
                                </header>

                                <div class="Popover__Content">
                                    <div class="Popover__ValueList" data-scrollable>
                                        {%- for value in option.values -%}
                                            <button type="button"
                                                    class="Popover__Value {% if value == option.selected_value %}is-selected{% endif %} Heading Link Link--primary u-h6"
                                                    data-value="{{ value | escape }}"
                                                    data-option-position="{{ option.position }}"
                                                    data-action="select-value">
                                                {{- value | escape -}}
                                            </button>
                                        {%- endfor -%}
                                    </div>

                                    {%- assign size_chart_page = block.settings.size_chart -%}

                                    {%- if show_option_label == false and size_label contains downcase_option and size_chart_page != blank -%}
                                        <button type="button"
                                                class="Popover__FooterHelp Heading Link Link--primary Text--subdued u-h6"
                                                data-action="open-modal"
                                                aria-controls="modal-{{ size_chart_page.handle }}">
                                            {{- 'product.form.size_chart' | t -}}
                                        </button>
                                    {%- endif -%}
                                </div>
                            </div>
                        {%- endif -%}
                    {%- endcapture -%}

                    {%- assign product_popovers = product_popovers | append: popover_html -%}
                {%- endif -%}
            </div>
        {%- endfor -%}

        <div class="no-js ProductForm__Option">
            <div class="Select Select--primary">
                {%- render 'icon' with 'select-arrow' -%}

                <select id="product-select-{{ product.id }}" name="id" title="Variant">
                    {%- for variant in product.variants -%}
                        <option {% if variant == selected_variant %}selected="selected"{% endif %} {% unless variant.available %}disabled="disabled"{% endunless %}
                                value="{{ variant.id }}" data-sku="{{ variant.sku }}">{{ variant.title }}
                            - {{ variant.price | money }}</option>
                    {%- endfor -%}
                </select>
            </div>
        </div>
    {%- else -%}
        <input type="hidden" name="id" data-sku="{{ selected_variant.sku }}" value="{{ selected_variant.id }}">
    {%- endunless -%}
</div>

{%- if size_chart_page != empty -%}
    {%- comment -%}If we have a size chart we capture the modal content (it must be displayed outside the form for proper positioning){%- endcomment -%}

    {%- capture product_modals -%}
        <div id="modal-{{ size_chart_page.handle }}" class="Modal Modal--dark Modal--fullScreen Modal--pageContent"
             aria-hidden="true" role="dialog" data-scrollable>
            <header class="Modal__Header">
                <h2 class="Modal__Title Heading u-h1">{{ size_chart_page.title }}</h2>
            </header>

            <div class="Modal__Content Rte">
                <div class="Container Container--extraNarrow">
                    {{- size_chart_page.content -}}
                </div>
            </div>

            <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom
                    data-action="close-modal">{% render 'icon' with 'close' %}</button>
        </div>
    {%- endcapture -%}
{%- endif -%}

{%- capture carat_modal -%}
    <div id="modal-carat" class="Modal Modal--pageContent"
         aria-hidden="true" role="dialog" data-scrollable>
        <header class="Modal__Header">
            <h2 class="Modal__Title Heading u-h1">Diamond Carat:</h2>
        </header>

        <div class="Modal__Content Rte">
            <div class="Container Container--extraNarrow">
                Carat: <a href="/pages/4cs-center-stone">Carats</a> are the unit of measurement for the weight of a diamond. One carat equals 200 milligrams, or about the size of a carob or pomegranate seed.
            </div>
        </div>

        <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom
                data-action="close-modal">{% render 'icon' with 'close' %}</button>
    </div>
{% endcapture %}

{%- capture color_modal -%}
    <div id="modal-color" class="Modal Modal--pageContent"
         aria-hidden="true" role="dialog" data-scrollable>
        <header class="Modal__Header">
            <h2 class="Modal__Title Heading u-h1">Diamond Color:</h2>
        </header>

        <div class="Modal__Content Rte">
            <div class="Container Container--extraNarrow">
                Color: A white diamond’s <a href="/pages/4cs-center-stone">color</a> is graded on a scale of D to Z with D-F being colorless, G-J near colorless, and the remainder until Z being various tints in an increasingly unappealing way.
            </div>
        </div>

        <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom
                data-action="close-modal">{% render 'icon' with 'close' %}</button>
    </div>
{% endcapture %}

{%- capture clarity_modal -%}
    <div id="modal-clarity" class="Modal Modal--pageContent"
         aria-hidden="true" role="dialog" data-scrollable>
        <header class="Modal__Header">
            <h2 class="Modal__Title Heading u-h1">Diamond Clarity:</h2>
        </header>

        <div class="Modal__Content Rte">
            <div class="Container Container--extraNarrow">
                Clarity: Diamonds are graded for <a href="/pages/4cs-center-stone">clarity</a> because they regularly have some internal defects called inclusions, which are rated on a scale of Flawless (FL-IF), Very Very Slightly Included (VVS1-VVS2), Very Slightly Included (VS1-VS2), Slightly Included (SI1-SI2), Included (I1-I2).
            </div>
        </div>

        <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom
                data-action="close-modal">{% render 'icon' with 'close' %}</button>
    </div>
{% endcapture %}

{%- capture finger_size_modal -%}
    <div id="modal-finder-size" class="Modal Modal--pageContent"
         aria-hidden="true" role="dialog" data-scrollable>
        <header class="Modal__Header">
            <h2 class="Modal__Title Heading u-h1">Finger Size:</h2>
        </header>

        <div class="Modal__Content Rte">
            <div class="Container Container--extraNarrow">
                Finger Size: Everyone’s finger is a different size and even then, it might change, so choose something that is snug, but comfortable and not difficult to take off. If you are unsure, you can use our
                <a href="/pages/ring-size-guide">ring size guide.</a>
            </div>
        </div>

        <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom
                data-action="close-modal">{% render 'icon' with 'close' %}</button>
    </div>
{% endcapture %}

{%- capture shapes_modal -%}
    <div id="modal-shapes" class="Modal Modal--pageContent"
         aria-hidden="true" role="dialog" data-scrollable>
        <header class="Modal__Header">
            <p class="Modal__Title Heading u-h1">Shapes:</p>
        </header>

        <div class="Modal__Content Rte">
            <div class="Container Container--extraNarrow">
                Shape: Diamonds are cut into many <a href="/pages/shapes-center-stone">shapes</a>, which each have their own unique properties of scintillation, fire and brilliance.
            </div>
        </div>

        <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom
                data-action="close-modal">{% render 'icon' with 'close' %}</button>
    </div>
{% endcapture %}

{%- for tag in product.tags -%}
    {%- if tag contains 'inquire' -%}
        {%- capture product_modal_inquire -%}
            <div id="modal-form-inquire" class="Modal Modal--dark Modal--fullScreen Modal--pageContent"
                 aria-hidden="true" role="dialog" data-scrollable>
                <header class="Modal__Header">
                    <p class="Modal__Title Heading u-h1"></p>
                </header>

                <div class="Modal__Content Rte">
                    <div class="Container" style="display:flex; height:100%">
                        {% render 'form-inquire' %}
                    </div>
                </div>

                <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom
                        data-action="close-modal">{% render 'icon' with 'close' %}</button>
            </div>
        {%- endcapture -%}
    {%- endif -%}
{%- endfor -%}

{%- comment -%}
--------------------------------------------------------------------------------------------------------------------
OFF SCREEN ELEMENTS

Implementation note: in the past (with "include") we could accumulate the data and output it outside the snippet
itself. However with the new "render" tag, everything that is captured inside cannot be used outside the snippet
itself. As a consequence we are moving them in JavaScript. This allows to make sure that those elements are upper
in the DOM tree, and do not show below the content
--------------------------------------------------------------------------------------------------------------------
{%- endcomment -%}

<div class="Product__OffScreen">
    {{- product_popovers -}}
    {{- product_modals -}}
    {{- product_modal_inquire -}}
    {{- carat_modal -}}
    {{- color_modal -}}
    {{- clarity_modal -}}
    {{- finger_size_modal -}}
    {{- shapes_modal -}}
</div>